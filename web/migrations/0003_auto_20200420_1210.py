# Generated by Django 3.0.5 on 2020-04-20 07:40

import django.contrib.auth.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import web.models


class Migration(migrations.Migration):

    dependencies = [
        ('web', '0002_auto_20200418_1524'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyApplicants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Shortlisted', 'Shortlisted'), ('Selected', 'Selected'), ('Rejected', 'Rejected'), ('Process', 'Process')], default='Pending', max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('website', models.URLField()),
                ('decription', models.TextField()),
                ('logo', models.FileField(blank=True, null=True, upload_to=web.models.img_url)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyCompanyBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('contact_details', models.TextField()),
                ('is_major', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyCompanyCatogery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('percantage', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyContractDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=50)),
                ('percantage', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyRecruiterJobposts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Shortlisted', 'Shortlisted'), ('Selected', 'Selected'), ('Rejected', 'Rejected'), ('Hired', 'Hired'), ('Process', 'Process')], default='Pending', max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now=True, null=True)),
                ('message', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='AgencyResume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.CharField(blank=True, max_length=5000)),
                ('candidate_name', models.CharField(max_length=1000)),
                ('email', models.EmailField(max_length=254)),
                ('mobile', models.CharField(blank=True, max_length=100, null=True)),
                ('experience', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Shortlisted', 'Shortlisted'), ('Hired', 'Hired'), ('Rejected', 'Rejected')], default='Pending', max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyWorkLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('no_of_profiles', models.IntegerField()),
                ('summary', models.TextField()),
                ('timegap', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AppliedJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Posted', 'Posted'), ('Deleted', 'Deleted')], max_length=50, null=True)),
                ('applied_on', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.CharField(default='', max_length=2000)),
                ('ip_address', models.CharField(default='', max_length=2000)),
                ('user_agent', models.CharField(default='', max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=False)),
                ('dislike', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('attached_file', models.FileField(blank=True, max_length=500, null=True, upload_to=web.models.img_url)),
            ],
        ),
        migrations.CreateModel(
            name='BlogAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('attached_file', models.FileField(blank=True, max_length=1000, null=True, upload_to=web.models.img_url)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('Enabled', 'Enabled'), ('Disabled', 'Disabled')], default='Enabled', max_length=10, null=True)),
                ('slug', models.SlugField(max_length=500, null=True)),
                ('internship_text', models.CharField(max_length=1000)),
                ('meta_title', models.TextField(default='')),
                ('meta_description', models.TextField(default='', null=True)),
                ('internship_meta_title', models.TextField(default='')),
                ('internship_meta_description', models.TextField(default='', null=True)),
                ('page_content', models.TextField(default='')),
                ('internship_content', models.TextField(default='')),
                ('meta', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('parent_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_cities', to='web.City')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('attachments', models.ManyToManyField(blank=True, to='web.Attachment')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5000)),
                ('website', models.CharField(blank=True, max_length=5000, null=True)),
                ('address', models.TextField()),
                ('profile_pic', models.FileField(blank=True, max_length=1000, null=True, upload_to=web.models.img_url)),
                ('size', models.CharField(choices=[('1-10', '1-10'), ('11-20', '11-20'), ('21-50', '21-50'), ('50-200', '50-200'), ('200+', '200+')], default='', max_length=10)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('company_type', models.CharField(choices=[('Consultant', 'consultant'), ('Company', 'company')], default='', max_length=50)),
                ('profile', models.TextField()),
                ('phone_number', models.CharField(max_length=15)),
                ('registered_date', models.DateField(auto_now_add=True)),
                ('email', models.EmailField(max_length=255, null=True)),
                ('short_code', models.CharField(max_length=50, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=5000, null=True)),
                ('meta_title', models.TextField(default='')),
                ('meta_description', models.TextField(default='', null=True)),
                ('campaign_icon', models.CharField(max_length=3000, null=True)),
                ('created_from', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('Enabled', 'Enabled'), ('Disabled', 'Disabled')], default='Enabled', max_length=10, null=True)),
                ('slug', models.SlugField(default='', max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DailySearchLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_job_posts', models.IntegerField(default='0')),
                ('created_on', models.DateField()),
                ('no_of_searches', models.IntegerField(default='0')),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_type', models.CharField(choices=[('Permanent', 'Permanent'), ('PartTime', 'PartTime')], max_length=50)),
                ('specialization', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='EducationDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
                ('score', models.CharField(max_length=50)),
                ('current_education', models.BooleanField(default=False)),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Degree')),
            ],
        ),
        migrations.CreateModel(
            name='EducationInstitue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('address', models.CharField(default='', max_length=2000)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.City')),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=500)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(max_length=500)),
                ('salary', models.CharField(max_length=100)),
                ('current_job', models.BooleanField(default=False)),
                ('job_profile', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FacebookPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_or_group', models.CharField(choices=[('Page', 'Page'), ('Group', 'Group'), ('PeelJobs', 'PeelJobs')], max_length=50)),
                ('page_or_group_id', models.CharField(max_length=500)),
                ('post_id', models.CharField(max_length=500)),
                ('post_status', models.CharField(choices=[('Posted', 'Posted'), ('Deleted', 'Deleted')], max_length=50, null=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FunctionalArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('InActive', 'InActive')], max_length=10, null=True)),
                ('slug', models.SlugField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GitHub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('git_url', models.URLField()),
                ('git_id', models.CharField(max_length=50)),
                ('disk_usage', models.CharField(max_length=200)),
                ('private_gists', models.IntegerField(default=0)),
                ('public_gists', models.IntegerField(default=0)),
                ('public_repos', models.IntegerField(default=0)),
                ('hireable', models.BooleanField(default=False)),
                ('total_private_repos', models.IntegerField(default=0)),
                ('owned_private_repos', models.IntegerField(default=0)),
                ('following', models.IntegerField(default=0)),
                ('followers', models.IntegerField(default=0)),
                ('company', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('user_from', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Google',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_id', models.CharField(default='', max_length=200)),
                ('google_url', models.CharField(default='', max_length=1000)),
                ('verified_email', models.CharField(default='', max_length=200)),
                ('family_name', models.CharField(default='', max_length=200)),
                ('name', models.CharField(default='', max_length=200)),
                ('picture', models.CharField(default='', max_length=200)),
                ('gender', models.CharField(default='', max_length=10)),
                ('dob', models.CharField(default='', max_length=50)),
                ('given_name', models.CharField(default='', max_length=200)),
                ('email', models.CharField(db_index=True, default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('InActive', 'InActive')], max_length=10, null=True)),
                ('slug', models.SlugField(max_length=500, null=True)),
                ('meta_title', models.TextField(default='')),
                ('meta_description', models.TextField(default='', null=True)),
                ('page_content', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('venue_details', models.TextField()),
                ('show_location', models.BooleanField(default=False)),
                ('latitude', models.CharField(blank=True, max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_year', models.IntegerField(blank=True, null=True)),
                ('max_year', models.IntegerField(blank=True, null=True)),
                ('max_salary', models.IntegerField(blank=True, null=True)),
                ('min_salary', models.IntegerField(blank=True, null=True)),
                ('role', models.CharField(blank=True, max_length=2000, null=True)),
                ('related_jobs', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(max_length=2000, unique=True)),
                ('unsubscribe_code', models.CharField(blank=True, max_length=100, null=True)),
                ('is_unsubscribe', models.BooleanField(default=False)),
                ('subscribe_code', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('unsubscribe_reason', models.TextField(default='')),
                ('industry', models.ManyToManyField(to='web.Industry')),
                ('location', models.ManyToManyField(to='web.City')),
            ],
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, null=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=5000, null=True)),
                ('job_role', models.CharField(default='', max_length=50)),
                ('vacancies', models.IntegerField()),
                ('description', models.TextField(null=True)),
                ('min_year', models.IntegerField(default=0)),
                ('min_month', models.IntegerField(default=0)),
                ('max_year', models.IntegerField(default=0)),
                ('max_month', models.IntegerField(default=0)),
                ('fresher', models.BooleanField(default=False)),
                ('pincode', models.CharField(blank=True, max_length=50, null=True)),
                ('application_fee', models.IntegerField(default=0)),
                ('govt_job_type', models.CharField(choices=[('Central', 'Central'), ('State', 'State')], default='Central', max_length=50)),
                ('selection_process', models.TextField(default='')),
                ('how_to_apply', models.TextField(default='')),
                ('important_dates', models.TextField(default='')),
                ('govt_from_date', models.DateField(blank=True, null=True)),
                ('govt_to_date', models.DateField(blank=True, null=True)),
                ('govt_exam_date', models.DateField(blank=True, null=True)),
                ('age_relaxation', models.TextField(default='')),
                ('walkin_contactinfo', models.TextField(default='')),
                ('walkin_show_contact_info', models.BooleanField(default=False)),
                ('walkin_from_date', models.DateField(blank=True, null=True)),
                ('walkin_to_date', models.DateField(blank=True, null=True)),
                ('walkin_time', models.TimeField(blank=True, null=True)),
                ('agency_job_type', models.CharField(choices=[('Permanent', 'Permanent'), ('Contract', 'Contract')], default='Permanent', max_length=50)),
                ('agency_invoice_type', models.CharField(choices=[('Recurring', 'Recurring'), ('Non_Recurring', 'Non Recurring')], default='Recurring', max_length=50)),
                ('agency_amount', models.CharField(default='', max_length=1000)),
                ('send_email_notifications', models.BooleanField(default=False)),
                ('visa_required', models.BooleanField(default=False)),
                ('visa_type', models.CharField(default='', max_length=50)),
                ('salary_type', models.CharField(blank=True, choices=[('Month', 'Month'), ('Year', 'Year')], max_length=20, null=True)),
                ('min_salary', models.IntegerField(default=0)),
                ('max_salary', models.IntegerField(default=0)),
                ('last_date', models.DateField(null=True)),
                ('published_on', models.DateTimeField(blank=True, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('posted_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_on', models.DateField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Exprired', 'Expired'), ('Live', 'Live'), ('Disabled', 'Disabled'), ('Pending', 'Pending'), ('Published', 'Published'), ('Hired', 'Hired'), ('Process', 'Process')], max_length=50, null=True)),
                ('previous_status', models.CharField(choices=[('Draft', 'Draft'), ('Exprired', 'Expired'), ('Live', 'Live'), ('Disabled', 'Disabled'), ('Pending', 'Pending'), ('Published', 'Published'), ('Hired', 'Hired'), ('Process', 'Process')], default='Draft', max_length=50, null=True)),
                ('post_on_fb', models.BooleanField(default=False)),
                ('post_on_tw', models.BooleanField(default=False)),
                ('post_on_ln', models.BooleanField(default=False)),
                ('fb_views', models.IntegerField(default=0)),
                ('tw_views', models.IntegerField(default=0)),
                ('ln_views', models.IntegerField(default=0)),
                ('other_views', models.IntegerField(default=0)),
                ('job_type', models.CharField(choices=[('full-time', 'Full Time'), ('internship', 'Internship'), ('walk-in', 'Walk-in'), ('government', 'Government'), ('Fresher', 'Fresher')], max_length=50)),
                ('published_message', models.TextField()),
                ('company_name', models.CharField(default='', max_length=100)),
                ('company_address', models.TextField()),
                ('company_description', models.TextField(null=True)),
                ('company_links', models.TextField()),
                ('company_emails', models.EmailField(blank=True, max_length=254, null=True)),
                ('meta_title', models.TextField()),
                ('meta_description', models.TextField(null=True)),
                ('closed_date', models.DateTimeField(blank=True, null=True)),
                ('minified_url', models.URLField(blank=True, null=True)),
                ('fb_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('agency_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.AgencyCompanyCatogery')),
                ('agency_client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.AgencyCompany')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Linkedin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkedin_id', models.CharField(max_length=200)),
                ('linkedin_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('first_name', models.CharField(max_length=500)),
                ('last_name', models.CharField(max_length=500)),
                ('email', models.CharField(db_index=True, max_length=500)),
                ('location', models.CharField(max_length=500)),
                ('education', models.CharField(blank=True, max_length=500, null=True)),
                ('workhistory', models.TextField()),
                ('industry', models.CharField(blank=True, max_length=500, null=True)),
                ('accesstoken', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='LinkedinFriend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkedin_id', models.CharField(max_length=200)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('workhistory', models.CharField(max_length=100)),
                ('industry', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LinkedinGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership', models.CharField(max_length=200)),
                ('group_id', models.CharField(max_length=200)),
                ('group_name', models.CharField(max_length=200)),
                ('allow_post', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LinkedinPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_or_group', models.CharField(choices=[('Group', 'Group'), ('Profile', 'Profile')], max_length=50)),
                ('post_id', models.CharField(max_length=500)),
                ('update_url', models.CharField(max_length=1000)),
                ('post_status', models.CharField(choices=[('Posted', 'Posted'), ('Deleted', 'Deleted')], max_length=50, null=True)),
                ('job_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.JobPost')),
            ],
        ),
        migrations.CreateModel(
            name='MailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('subject', models.TextField()),
                ('created_on', models.DateTimeField(null=True)),
                ('modified_on', models.DateTimeField()),
                ('title', models.CharField(max_length=100)),
                ('show_recruiter', models.BooleanField(default=False)),
                ('applicant_status', models.CharField(choices=[('Posted', 'Posted'), ('Deleted', 'Deleted')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=255)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False, null=True)),
                ('lvl', models.IntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(default='', max_length=2000, null=True)),
                ('role', models.CharField(blank=True, max_length=500, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.City')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('InActive', 'InActive')], max_length=10, null=True)),
                ('slug', models.SlugField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_post', models.CharField(default=0, max_length=1000)),
                ('other_skill', models.CharField(max_length=1000)),
                ('other_location', models.CharField(max_length=1000)),
                ('search_text', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('industry', models.CharField(max_length=1000)),
                ('search_on', models.DateTimeField(auto_now=True)),
                ('functional_area', models.CharField(max_length=1000)),
                ('job_type', models.CharField(blank=True, choices=[('full-time', 'Full Time'), ('internship', 'Internship'), ('walk-in', 'Walk-in'), ('government', 'Government'), ('Fresher', 'Fresher')], max_length=20, null=True)),
                ('expierence', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(max_length=200)),
                ('locations', models.ManyToManyField(related_name='location_search', to='web.City')),
            ],
        ),
        migrations.CreateModel(
            name='SentMail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_on', models.DateTimeField(auto_now=True)),
                ('job_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.JobPost')),
            ],
        ),
        migrations.CreateModel(
            name='simplecontact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.BigIntegerField(blank=True, null=True)),
                ('contacted_on', models.DateField(auto_now=True)),
                ('subject', models.CharField(max_length=500)),
                ('enquery_type', models.CharField(choices=[('Suggestion', 'Suggestion'), ('Technical Issue', 'Technical Issue'), ('Complaint', 'Complaint'), ('others', 'Others')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('InActive', 'InActive')], max_length=10, null=True)),
                ('icon', models.CharField(max_length=1000)),
                ('slug', models.SlugField(max_length=500, null=True)),
                ('meta_title', models.TextField(default='')),
                ('meta_description', models.TextField(default='', null=True)),
                ('page_content', models.TextField(default='')),
                ('meta', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('skill_type', models.CharField(choices=[('it', 'IT'), ('non-it', 'Non-IT'), ('other', 'Other')], default='it', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Live', 'Live'), ('Closed', 'Closed')], max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('likes', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0)),
                ('attachments', models.ManyToManyField(to='web.Attachment')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('Enabled', 'Enabled'), ('Disabled', 'Disabled')], default='Enabled', max_length=10)),
                ('slug', models.SlugField(default='', max_length=500, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('unsubscribe_code', models.CharField(blank=True, max_length=100, null=True)),
                ('is_unsubscribe', models.BooleanField(default=False)),
                ('subscribe_code', models.CharField(blank=True, max_length=100, null=True)),
                ('unsubscribe_reason', models.TextField(default='')),
                ('job_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.JobPost')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('last_used', models.DateField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=100, null=True)),
                ('proficiency', models.CharField(blank=True, choices=[('Poor', 'Poor'), ('Average', 'Average'), ('Good', 'Good'), ('Expert', 'Expert')], max_length=100, null=True)),
                ('is_major', models.BooleanField(default=False)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Normal', 'Normal'), ('High', 'High')], max_length=20)),
                ('ticket_type', models.CharField(choices=[('Bug', 'Bug'), ('Feature', 'Feature'), ('Enhancement', 'Enhancement'), ('Performance', 'Performance'), ('Design', 'Design'), ('Other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Ongoing', 'Ongoing')], max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now_add=True)),
                ('order', models.IntegerField(blank=True, default=1)),
                ('attachments', models.ManyToManyField(blank=True, to='web.Attachment')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('profile_pic', models.FileField(blank=True, max_length=1000, null=True, upload_to=web.models.img_url)),
                ('user_type', models.CharField(choices=[('JS', 'Job Seeker'), ('RR', 'Recruiter'), ('RA', 'Recruiter Admin'), ('AA', 'Agency Admin'), ('AR', 'Agency Recruiter')], max_length=10)),
                ('signature', models.CharField(default='', max_length=2000)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('gender', models.CharField(blank=True, choices=[('F', 'Female'), ('M', 'Male')], max_length=10, null=True)),
                ('address', models.TextField(blank=True, max_length=1000, null=True)),
                ('permanent_address', models.TextField(blank=True, max_length=1000, null=True)),
                ('nationality', models.TextField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('alternate_mobile', models.BigIntegerField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_verified', models.BooleanField(default=False)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('last_password_reset_on', models.DateTimeField(auto_now_add=True)),
                ('photo', models.CharField(max_length=500)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married')], max_length=50, null=True)),
                ('job_role', models.CharField(default='', max_length=500)),
                ('current_salary', models.CharField(blank=True, max_length=50, null=True)),
                ('expected_salary', models.CharField(blank=True, max_length=500, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('profile_description', models.CharField(default='', max_length=2000, null=True)),
                ('resume', models.CharField(default='', max_length=2000)),
                ('relocation', models.BooleanField(default=False)),
                ('notice_period', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.CharField(blank=True, max_length=50, null=True)),
                ('month', models.CharField(default='', max_length=50)),
                ('show_email', models.BooleanField(default=False)),
                ('resume_title', models.TextField(blank=True, max_length=2000, null=True)),
                ('resume_text', models.TextField(blank=True, null=True)),
                ('mobile_verification_code', models.CharField(default='', max_length=50)),
                ('last_mobile_code_verified_on', models.DateTimeField(auto_now_add=True)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('is_login', models.BooleanField(default=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('profile_updated', models.DateTimeField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('profile_completeness', models.CharField(default='', max_length=500)),
                ('activation_code', models.CharField(blank=True, max_length=100, null=True)),
                ('registered_from', models.CharField(choices=[('Email', 'Email'), ('Social', 'Social'), ('ResumePool', 'ResumePool'), ('Resume', 'Resume'), ('Careers', 'Careers')], default='', max_length=15)),
                ('is_unsubscribe', models.BooleanField(default=False)),
                ('is_bounce', models.BooleanField(default=False)),
                ('unsubscribe_code', models.CharField(blank=True, max_length=100, null=True)),
                ('agency_admin', models.BooleanField(default=False)),
                ('referer', models.TextField(blank=True, null=True)),
                ('unsubscribe_reason', models.TextField(default='')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_city', to='web.City')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Company')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Country')),
                ('current_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_city', to='web.City')),
                ('education', models.ManyToManyField(to='web.EducationDetails')),
                ('employment_history', models.ManyToManyField(to='web.EmploymentHistory')),
                ('functional_area', models.ManyToManyField(to='web.FunctionalArea')),
                ('industry', models.ManyToManyField(related_name='recruiter_industries', to='web.Industry')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_email', to='web.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('speak', models.BooleanField(default=False)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Language')),
            ],
        ),
        migrations.CreateModel(
            name='VisitedJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visited_on', models.DateTimeField(auto_now=True)),
                ('job_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.JobPost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User')),
            ],
        ),
        migrations.AlterModelOptions(
            name='question',
            options={'ordering': ['-created_on']},
        ),
        migrations.AddField(
            model_name='question',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='description',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='dislikes',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='question',
            name='likes',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='question',
            name='modified_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='question',
            name='slug',
            field=models.SlugField(max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='status',
            field=models.CharField(choices=[('Pending', 'Pending'), ('Live', 'Live'), ('Closed', 'Closed')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='title',
            field=models.CharField(default=1, max_length=255),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='CredentialsModel',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='web.User')),
            ],
        ),
        migrations.DeleteModel(
            name='Choice',
        ),
        migrations.AddField(
            model_name='user',
            name='language',
            field=models.ManyToManyField(to='web.UserLanguage'),
        ),
        migrations.AddField(
            model_name='user',
            name='prefered_industry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Industry'),
        ),
        migrations.AddField(
            model_name='user',
            name='preferred_city',
            field=models.ManyToManyField(related_name='preferred_city', to='web.City'),
        ),
        migrations.AddField(
            model_name='user',
            name='project',
            field=models.ManyToManyField(to='web.Project'),
        ),
        migrations.AddField(
            model_name='user',
            name='skills',
            field=models.ManyToManyField(to='web.TechnicalSkill'),
        ),
        migrations.AddField(
            model_name='user',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.State'),
        ),
        migrations.AddField(
            model_name='user',
            name='technical_skills',
            field=models.ManyToManyField(related_name='recruiter_skill', to='web.Skill'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket', to='web.User'),
        ),
        migrations.AddField(
            model_name='subscriber',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='solution',
            name='given_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='sentmail',
            name='recruiter',
            field=models.ManyToManyField(to='web.User'),
        ),
        migrations.AddField(
            model_name='sentmail',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.MailTemplate'),
        ),
        migrations.AddField(
            model_name='searchresult',
            name='skills',
            field=models.ManyToManyField(null=True, related_name='skill_search', to='web.Skill'),
        ),
        migrations.AddField(
            model_name='searchresult',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='project',
            name='skills',
            field=models.ManyToManyField(null=True, to='web.Skill'),
        ),
        migrations.AddField(
            model_name='mailtemplate',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='linkedingroup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='linkedinfriend',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='linkedin',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linkedin', to='web.User'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='agency_recruiters',
            field=models.ManyToManyField(related_name='recruiters', to='web.User'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Company'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_country', to='web.Country'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='edu_qualification',
            field=models.ManyToManyField(to='web.Qualification'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='functional_area',
            field=models.ManyToManyField(to='web.FunctionalArea'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='industry',
            field=models.ManyToManyField(to='web.Industry'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='job_interview_location',
            field=models.ManyToManyField(to='web.InterviewLocation'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='keywords',
            field=models.ManyToManyField(to='web.Keyword'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='location',
            field=models.ManyToManyField(related_name='locations', to='web.City'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='major_skill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='major_skill', to='web.Skill'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='skills',
            field=models.ManyToManyField(to='web.Skill'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobposts', to='web.User'),
        ),
        migrations.AddField(
            model_name='jobpost',
            name='visa_country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visa_country', to='web.Country'),
        ),
        migrations.AddField(
            model_name='jobalert',
            name='skill',
            field=models.ManyToManyField(to='web.Skill'),
        ),
        migrations.AddField(
            model_name='google',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='google_user', to='web.User'),
        ),
        migrations.AddField(
            model_name='github',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='github', to='web.User'),
        ),
        migrations.AddField(
            model_name='facebookpost',
            name='job_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.JobPost'),
        ),
        migrations.AddField(
            model_name='educationdetails',
            name='institute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.EducationInstitue'),
        ),
        migrations.AddField(
            model_name='degree',
            name='degree_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Qualification'),
        ),
        migrations.AddField(
            model_name='dailysearchlog',
            name='skills',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Skill'),
        ),
        migrations.AddField(
            model_name='comment',
            name='commented_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='web.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket', to='web.Ticket'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state', to='web.State'),
        ),
        migrations.AddField(
            model_name='blogattachment',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='assessmentdata',
            name='question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_data', to='web.Question'),
        ),
        migrations.AddField(
            model_name='assessmentdata',
            name='solution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solution_data', to='web.Solution'),
        ),
        migrations.AddField(
            model_name='assessmentdata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_data', to='web.User'),
        ),
        migrations.AddField(
            model_name='appliedjobs',
            name='job_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.JobPost'),
        ),
        migrations.AddField(
            model_name='appliedjobs',
            name='resume_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.AgencyResume'),
        ),
        migrations.AddField(
            model_name='appliedjobs',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='agencyworklog',
            name='job_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.JobPost'),
        ),
        migrations.AddField(
            model_name='agencyworklog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='agencyresume',
            name='skill',
            field=models.ManyToManyField(to='web.Skill'),
        ),
        migrations.AddField(
            model_name='agencyresume',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='agencyresume',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Applicant', to='web.User'),
        ),
        migrations.AddField(
            model_name='agencyrecruiterjobposts',
            name='job_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.JobPost'),
        ),
        migrations.AddField(
            model_name='agencyrecruiterjobposts',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='agencycompanybranch',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.City'),
        ),
        migrations.AddField(
            model_name='agencycompany',
            name='branch_details',
            field=models.ManyToManyField(to='web.AgencyCompanyBranch'),
        ),
        migrations.AddField(
            model_name='agencycompany',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Company'),
        ),
        migrations.AddField(
            model_name='agencycompany',
            name='company_categories',
            field=models.ManyToManyField(related_name='categories', to='web.AgencyCompanyCatogery'),
        ),
        migrations.AddField(
            model_name='agencycompany',
            name='contract_details',
            field=models.ManyToManyField(related_name='contract_details', to='web.AgencyContractDetails'),
        ),
        migrations.AddField(
            model_name='agencycompany',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User'),
        ),
        migrations.AddField(
            model_name='agencyapplicants',
            name='applicant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.AgencyResume'),
        ),
        migrations.AddField(
            model_name='agencyapplicants',
            name='job_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.JobPost'),
        ),
        migrations.AddField(
            model_name='question',
            name='attachments',
            field=models.ManyToManyField(to='web.Attachment'),
        ),
        migrations.AddField(
            model_name='question',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='web.User'),
        ),
        migrations.AddField(
            model_name='question',
            name='skills',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill_questions', to='web.Skill'),
        ),
        migrations.AddField(
            model_name='question',
            name='solutions',
            field=models.ManyToManyField(to='web.Solution'),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('title', 'skills')},
        ),
        migrations.RemoveField(
            model_name='question',
            name='pub_date',
        ),
        migrations.RemoveField(
            model_name='question',
            name='question_text',
        ),
    ]
